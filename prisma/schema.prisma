generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PG_DATABASE_URL")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String     @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  username      String?    @unique
  accounts      Account[]
  bookmarks     Bookmark[]
  Post          Post[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Post {
  id          String      @id @default(cuid())
  title       String
  content     String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  ownerId     String
  slug        String?     @unique
  description String      @default("")
  bookmarks   Bookmark[]
  owner       User        @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  images      PostImage[]

  @@index([ownerId, updatedAt])
}

model PostImage {
  id          String   @id @default(cuid())
  altText     String?
  contentType String
  blob        Bytes
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  postId      String
  post        Post     @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@index([postId])
}

model Bookmark {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  userId    String
  postId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
  @@index([userId])
  @@index([postId])
}
